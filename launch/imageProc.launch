<launch>
<!-- 
  <node name ="bag_node" pkg = "rosbag" type = "play" args = "-r 1 /home/hansk/slam_course_ws/slowForward.bag " /> 
   -->
  <!-- ImageProcessorNodelet/iSAM2 Variables -->
  <arg name="robot" default="turtlebot"/>
  <!-- <arg name="calibration_file"
    default="$(find gtsam_vio)/config/zed_imu_camera_altered.yaml"/> -->
  <arg name="calibration_file"
    default="$(find periodic_slam)/config/hans.yaml"/>

 
  
  <!-- iSAM2 Variables -->
  <arg name="images_compressed" default="true"/>
  <arg name="camera_left_topic_id" default="/left_r200/camera/color/image_raw"/>
  <arg name="camera_right_topic_id" default="/right_r200/camera/color/image_raw"/>
  <arg name="imu_topic_id" default="/zed/zed_node/imu/data"/>
  <arg name="world_frame_id" value="world"/>
  
  <!-- iSAM2 Parameters -->
  <rosparam command="load" file="$(arg calibration_file)"/>
  <param name="feature_topic_id" value="/$(arg robot)/image_processor/features"/>
  <param name="imu_topic_id" value="$(arg imu_topic_id)"/>
  <param name="odom_topic_id" value="/zed/zed_node/odom"/>
  <param name="camera_frame_id" value="zed_left_camera_optical_frame"/>
  <param name="robot_frame_id" value="$(arg robot)"/>
  <param name="world_frame_id" value="$(arg world_frame_id)"/>

 

    <node pkg="periodic_slam" type="image_processorNew"  output="screen" name="image_processor">  
      
      <rosparam command="load" file="$(arg calibration_file)"/>
      <param name="grid_row" value="3"/>
      <param name="grid_col" value="4"/>
      <param name="grid_min_feature_num" value="3"/>
      <param name="grid_max_feature_num" value="10"/>
      <param name="pyramid_levels" value="3"/>
      <param name="patch_size" value="15"/>
      <param name="fast_threshold" value="1"/>
      <param name="max_iteration" value="30"/>
      <param name="track_precision" value="0.01"/>
      <param name="ransac_threshold" value="3"/>
      <param name="stereo_threshold" value="5"/>

      <remap from="~imu" to="$(arg imu_topic_id)"/> 
      <remap from="~cam0_image" to="$(arg camera_left_topic_id)"/>
      <remap from="~cam1_image" to="$(arg camera_right_topic_id)"/>
  
    </node>

    <!-- Uncompress images if compressed  -->
    <node name="republish_left" type="republish" pkg="image_transport"
      args="compressed in:=$(arg camera_left_topic_id) raw out:=$(arg camera_left_topic_id)" 
      if ="$(eval arg('images_compressed'))"/>
    <node name="republish_right" type="republish" pkg="image_transport"
      args="compressed in:=$(arg camera_right_topic_id) raw out:=$(arg camera_right_topic_id)"
      if ="$(eval arg('images_compressed'))"/>
    
 
 
  
 
</launch>

 
